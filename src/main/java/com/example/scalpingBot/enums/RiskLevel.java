package com.example.scalpingBot.enums;

import lombok.Getter;
import java.math.BigDecimal;

/**
 * –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω–µ–π —Ä–∏—Å–∫–∞ –¥–ª—è —Å–∫–∞–ª—å–ø–∏–Ω–≥-–±–æ—Ç–∞
 *
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–µ–ø–µ–Ω—å —Ä–∏—Å–∫–∞ –¥–ª—è:
 * - –û—Ç–¥–µ–ª—å–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
 * - –ü–æ—Ä—Ç—Ñ–µ–ª—è –≤ —Ü–µ–ª–æ–º
 * - –†—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
 *
 * @author ScalpingBot Team
 * @version 1.0
 */
@Getter
public enum RiskLevel {

    /**
     * –û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫ - –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è
     *
     * –£—Å–ª–æ–≤–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:
     * - –°—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
     * - –ù–∏–∑–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å (ATR < 2%)
     * - –í—ã—Å–æ–∫–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å
     * - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–∞–∂–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
     * - –°—Ç–∞–±–∏–ª—å–Ω—ã–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É –∞–∫—Ç–∏–≤–∞–º–∏
     */
    VERY_LOW(
            "VERY_LOW",
            "–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫",
            new BigDecimal("1.0"),   // –º–∞–∫—Å–∏–º—É–º 1% –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏—é
            new BigDecimal("0.2"),   // —Å—Ç–æ–ø-–ª–æ—Å—Å 0.2% (–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–µ–µ –æ–±—ã—á–Ω–æ–≥–æ)
            new BigDecimal("0.4"),   // —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç 0.4% (—Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ 1:2)
            3,                       // –º–∞–∫—Å–∏–º—É–º 3 –ø–æ–∑–∏—Ü–∏–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
            new BigDecimal("0.5"),   // –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –ø–æ—Ç–µ—Ä—å 0.5%
            30,                      // –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
            new BigDecimal("2.0"),   // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å 2%
            "üü¢",                    // –∑–µ–ª–µ–Ω—ã–π
            "#00FF00",              // –∑–µ–ª–µ–Ω—ã–π hex
            1                       // –Ω–∏–∑—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    ),

    /**
     * –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ—Å—Ç–æ—Ä–æ–∂–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è
     *
     * –£—Å–ª–æ–≤–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:
     * - –ù–æ—Ä–º–∞–ª—å–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
     * - –£–º–µ—Ä–µ–Ω–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å (ATR 2-4%)
     * - –•–æ—Ä–æ—à–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å
     * - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
     * - –°—Ç–∞–±–∏–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–¥
     */
    LOW(
            "LOW",
            "–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫",
            new BigDecimal("2.5"),   // –º–∞–∫—Å–∏–º—É–º 2.5% –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏—é
            new BigDecimal("0.3"),   // —Å—Ç–æ–ø-–ª–æ—Å—Å 0.3%
            new BigDecimal("0.6"),   // —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç 0.6% (—Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ 1:2)
            5,                       // –º–∞–∫—Å–∏–º—É–º 5 –ø–æ–∑–∏—Ü–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
            new BigDecimal("1.0"),   // –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –ø–æ—Ç–µ—Ä—å 1%
            20,                      // –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥—ã–µ 20 —Å–µ–∫—É–Ω–¥
            new BigDecimal("4.0"),   // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å 4%
            "üü°",                    // –∂–µ–ª—Ç—ã–π
            "#FFFF00",              // –∂–µ–ª—Ç—ã–π hex
            2                       // –Ω–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    ),

    /**
     * –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞
     *
     * –£—Å–ª–æ–≤–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:
     * - –û–±—ã—á–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
     * - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å (ATR 4-6%)
     * - –î–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å
     * - –û–±—ã—á–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–æ–≤–æ—Å—Ç–µ–π
     * - –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
     */
    MEDIUM(
            "MEDIUM",
            "–°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫",
            new BigDecimal("5.0"),   // –º–∞–∫—Å–∏–º—É–º 5% –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏—é (—Å—Ç–∞–Ω–¥–∞—Ä—Ç)
            new BigDecimal("0.4"),   // —Å—Ç–æ–ø-–ª–æ—Å—Å 0.4% (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä)
            new BigDecimal("0.8"),   // —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç 0.8% (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä)
            10,                      // –º–∞–∫—Å–∏–º—É–º 10 –ø–æ–∑–∏—Ü–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç)
            new BigDecimal("2.0"),   // –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –ø–æ—Ç–µ—Ä—å 2% (—Å—Ç–∞–Ω–¥–∞—Ä—Ç)
            15,                      // –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç)
            new BigDecimal("6.0"),   // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å 6%
            "üü†",                    // –æ—Ä–∞–Ω–∂–µ–≤—ã–π
            "#FFA500",              // –æ—Ä–∞–Ω–∂–µ–≤—ã–π hex
            3                       // —Å—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    ),

    /**
     * –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ - –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è
     *
     * –£—Å–ª–æ–≤–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:
     * - –í–æ–ª–∞—Ç–∏–ª—å–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
     * - –í—ã—Å–æ–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å (ATR 6-10%)
     * - –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏—è
     * - –ê–∫—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–±—ã—Ç–∏—è
     * - –°–∏–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è
     */
    HIGH(
            "HIGH",
            "–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫",
            new BigDecimal("7.5"),   // –º–∞–∫—Å–∏–º—É–º 7.5% –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏—é
            new BigDecimal("0.6"),   // —Å—Ç–æ–ø-–ª–æ—Å—Å 0.6% (—à–∏—Ä–µ –¥–ª—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏)
            new BigDecimal("1.2"),   // —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç 1.2% (—Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ 1:2)
            15,                      // –º–∞–∫—Å–∏–º—É–º 15 –ø–æ–∑–∏—Ü–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
            new BigDecimal("3.0"),   // –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –ø–æ—Ç–µ—Ä—å 3%
            10,                      // –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ (—á–∞—â–µ)
            new BigDecimal("10.0"),  // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å 10%
            "üî∂",                    // –æ—Ä–∞–Ω–∂–µ–≤—ã–π —Ä–æ–º–±
            "#FF8000",              // —Ç–µ–º–Ω–æ-–æ—Ä–∞–Ω–∂–µ–≤—ã–π hex
            4                       // –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    ),

    /**
     * –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ - —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
     *
     * –£—Å–ª–æ–≤–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:
     * - –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å (ATR > 10%)
     * - –ö—Ä–∏–∑–∏—Å–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
     * - –°–µ—Ä—å–µ–∑–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–±—ã—Ç–∏—è
     * - –ù–∏–∑–∫–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å
     * - –ê–≤–∞—Ä–∏–π–Ω—ã–π —Ä–µ–∂–∏–º —Ç–æ—Ä–≥–æ–≤–ª–∏
     */
    VERY_HIGH(
            "VERY_HIGH",
            "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫",
            new BigDecimal("10.0"),  // –º–∞–∫—Å–∏–º—É–º 10% –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏—é
            new BigDecimal("1.0"),   // —Å—Ç–æ–ø-–ª–æ—Å—Å 1.0% (—à–∏—Ä–æ–∫–∏–π –¥–ª—è —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ–π –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏)
            new BigDecimal("2.0"),   // —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç 2.0% (—Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ 1:2)
            20,                      // –º–∞–∫—Å–∏–º—É–º 20 –ø–æ–∑–∏—Ü–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
            new BigDecimal("5.0"),   // –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –ø–æ—Ç–µ—Ä—å 5%
            5,                       // –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ (–æ—á–µ–Ω—å —á–∞—Å—Ç–æ)
            new BigDecimal("20.0"),  // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å 20%
            "üî¥",                    // –∫—Ä–∞—Å–Ω—ã–π
            "#FF0000",              // –∫—Ä–∞—Å–Ω—ã–π hex
            5                       // –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    ),

    /**
     * –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∏—Å–∫ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏
     *
     * –£—Å–ª–æ–≤–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:
     * - –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–±–æ–∏
     * - –ê–Ω–æ–º–∞–ª—å–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
     * - –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –≤—Å–µ—Ö –ª–∏–º–∏—Ç–æ–≤ —Ä–∏—Å–∫–∞
     * - –ü–æ—Ç–µ—Ä—è —Å–≤—è–∑–∏ —Å –±–∏—Ä–∂–µ–π
     * - –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
     */
    CRITICAL(
            "CRITICAL",
            "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∏—Å–∫ - —Ç–æ—Ä–≥–æ–≤–ª—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞",
            new BigDecimal("0.0"),   // —Ç–æ—Ä–≥–æ–≤–ª—è –∑–∞–ø—Ä–µ—â–µ–Ω–∞
            new BigDecimal("0.0"),   // —Å—Ç–æ–ø-–ª–æ—Å—Å—ã –Ω–µ —Ä–∞–∑–º–µ—â–∞—é—Ç—Å—è
            new BigDecimal("0.0"),   // —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç—ã –Ω–µ —Ä–∞–∑–º–µ—â–∞—é—Ç—Å—è
            0,                       // –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã
            new BigDecimal("0.0"),   // –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –ø—Ä–µ–≤—ã—à–µ–Ω
            0,                       // –∞–Ω–∞–ª–∏–∑ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
            new BigDecimal("0.0"),   // –ª—é–±–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–∏—á–Ω–∞
            "üíÄ",                    // —á–µ—Ä–µ–ø
            "#800000",              // —Ç–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π hex
            6                       // –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    );

    /**
     * –ö–æ–¥ —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞
     */
    private final String code;

    /**
     * –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
     */
    private final String description;

    /**
     * –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞
     */
    private final BigDecimal maxPositionSizePercent;

    /**
     * –°—Ç–æ–ø-–ª–æ—Å—Å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     */
    private final BigDecimal stopLossPercent;

    /**
     * –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     */
    private final BigDecimal takeProfitPercent;

    /**
     * –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
     */
    private final int maxSimultaneousPositions;

    /**
     * –î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –ø–æ—Ç–µ—Ä—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     */
    private final BigDecimal dailyLossLimitPercent;

    /**
     * –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–Ω–∞–ª–∏–∑–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
     */
    private final int analysisIntervalSeconds;

    /**
     * –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ–ø—É—Å—Ç–∏–º–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å (ATR) –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     */
    private final BigDecimal maxVolatilityPercent;

    /**
     * –≠–º–æ–¥–∑–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
     */
    private final String emoji;

    /**
     * –¶–≤–µ—Ç–æ–≤–æ–π –∫–æ–¥
     */
    private final String colorCode;

    /**
     * –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ (—á–µ–º –≤—ã—à–µ —á–∏—Å–ª–æ, —Ç–µ–º –≤—ã—à–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
     */
    private final int priority;

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è
     */
    RiskLevel(String code, String description, BigDecimal maxPositionSizePercent,
              BigDecimal stopLossPercent, BigDecimal takeProfitPercent,
              int maxSimultaneousPositions, BigDecimal dailyLossLimitPercent,
              int analysisIntervalSeconds, BigDecimal maxVolatilityPercent,
              String emoji, String colorCode, int priority) {
        this.code = code;
        this.description = description;
        this.maxPositionSizePercent = maxPositionSizePercent;
        this.stopLossPercent = stopLossPercent;
        this.takeProfitPercent = takeProfitPercent;
        this.maxSimultaneousPositions = maxSimultaneousPositions;
        this.dailyLossLimitPercent = dailyLossLimitPercent;
        this.analysisIntervalSeconds = analysisIntervalSeconds;
        this.maxVolatilityPercent = maxVolatilityPercent;
        this.emoji = emoji;
        this.colorCode = colorCode;
        this.priority = priority;
    }

    /**
     * –ù–∞–π—Ç–∏ —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –ø–æ –∫–æ–¥—É
     *
     * @param code –∫–æ–¥ —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞
     * @return –Ω–∞–π–¥–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞
     * @throws IllegalArgumentException –µ—Å–ª–∏ –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
     */
    public static RiskLevel fromCode(String code) {
        if (code == null || code.trim().isEmpty()) {
            throw new IllegalArgumentException("Risk level code cannot be null or empty");
        }

        String normalizedCode = code.trim().toUpperCase();

        for (RiskLevel level : values()) {
            if (level.code.equals(normalizedCode)) {
                return level;
            }
        }

        throw new IllegalArgumentException("Unknown risk level code: " + code);
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ (ATR)
     *
     * @param atrPercent –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     * @return —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞
     */
    public static RiskLevel fromVolatility(BigDecimal atrPercent) {
        if (atrPercent == null || atrPercent.compareTo(BigDecimal.ZERO) < 0) {
            return MEDIUM; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }

        if (atrPercent.compareTo(new BigDecimal("2.0")) <= 0) {
            return VERY_LOW;
        } else if (atrPercent.compareTo(new BigDecimal("4.0")) <= 0) {
            return LOW;
        } else if (atrPercent.compareTo(new BigDecimal("6.0")) <= 0) {
            return MEDIUM;
        } else if (atrPercent.compareTo(new BigDecimal("10.0")) <= 0) {
            return HIGH;
        } else if (atrPercent.compareTo(new BigDecimal("20.0")) <= 0) {
            return VERY_HIGH;
        } else {
            return CRITICAL;
        }
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–∏—Ö –ø–æ—Ç–µ—Ä—å
     *
     * @param currentLossPercent —Ç–µ–∫—É—â–∏–µ –ø–æ—Ç–µ—Ä–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     * @param maxDailyLoss –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –ø–æ—Ç–µ—Ä—å
     * @return —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞
     */
    public static RiskLevel fromCurrentLoss(BigDecimal currentLossPercent, BigDecimal maxDailyLoss) {
        if (currentLossPercent == null || maxDailyLoss == null) {
            return MEDIUM;
        }

        BigDecimal lossRatio = currentLossPercent.abs().divide(maxDailyLoss, 2, BigDecimal.ROUND_HALF_UP);

        if (lossRatio.compareTo(new BigDecimal("0.25")) <= 0) {
            return VERY_LOW;  // –ø–æ—Ç–µ—Ä–∏ < 25% –æ—Ç –ª–∏–º–∏—Ç–∞
        } else if (lossRatio.compareTo(new BigDecimal("0.5")) <= 0) {
            return LOW;       // –ø–æ—Ç–µ—Ä–∏ < 50% –æ—Ç –ª–∏–º–∏—Ç–∞
        } else if (lossRatio.compareTo(new BigDecimal("0.75")) <= 0) {
            return MEDIUM;    // –ø–æ—Ç–µ—Ä–∏ < 75% –æ—Ç –ª–∏–º–∏—Ç–∞
        } else if (lossRatio.compareTo(new BigDecimal("0.9")) <= 0) {
            return HIGH;      // –ø–æ—Ç–µ—Ä–∏ < 90% –æ—Ç –ª–∏–º–∏—Ç–∞
        } else if (lossRatio.compareTo(new BigDecimal("1.0")) < 0) {
            return VERY_HIGH; // –ø–æ—Ç–µ—Ä–∏ –±–ª–∏–∑–∫–∏ –∫ –ª–∏–º–∏—Ç—É
        } else {
            return CRITICAL;  // –ª–∏–º–∏—Ç –ø—Ä–µ–≤—ã—à–µ–Ω
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ –ª–∏ —Ç–æ—Ä–≥–æ–≤–ª—è –Ω–∞ –¥–∞–Ω–Ω–æ–º —É—Ä–æ–≤–Ω–µ —Ä–∏—Å–∫–∞
     *
     * @return true –µ—Å–ª–∏ —Ç–æ—Ä–≥–æ–≤–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∞
     */
    public boolean isTradingAllowed() {
        return this != CRITICAL;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ç—Ä–µ–±—É–µ—Ç –ª–∏ —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
     *
     * @return true –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
     */
    public boolean requiresImmediateAction() {
        return this == VERY_HIGH || this == CRITICAL;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞
     *
     * @return —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
     */
    public String getRecommendedAction() {
        switch (this) {
            case VERY_LOW:
                return "–ú–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å";
            case LOW:
                return "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è";
            case MEDIUM:
                return "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π";
            case HIGH:
                return "–°–Ω–∏–∑–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã –ø–æ–∑–∏—Ü–∏–π";
            case VERY_HIGH:
                return "–ó–∞–∫—Ä—ã—Ç—å —á–∞—Å—Ç—å –ø–æ–∑–∏—Ü–∏–π";
            case CRITICAL:
                return "–û–°–¢–ê–ù–û–í–ò–¢–¨ –í–°–Æ –¢–û–†–ì–û–í–õ–Æ";
            default:
                return "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥";
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫/–ø—Ä–∏–±—ã–ª—å
     *
     * @return —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫/–ø—Ä–∏–±—ã–ª—å
     */
    public BigDecimal getRiskRewardRatio() {
        if (stopLossPercent.compareTo(BigDecimal.ZERO) == 0) {
            return BigDecimal.ZERO;
        }
        return takeProfitPercent.divide(stopLossPercent, 2, BigDecimal.ROUND_HALF_UP);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —ç–∫—Å–ø–æ–∑–∏—Ü–∏—é –ø–æ—Ä—Ç—Ñ–µ–ª—è
     *
     * @return –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     */
    public BigDecimal getMaxPortfolioExposure() {
        return maxPositionSizePercent.multiply(new BigDecimal(maxSimultaneousPositions));
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ç–µ–∫—É—â–∏–º–∏ —Ä—ã–Ω–æ—á–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏
     *
     * @param currentVolatility —Ç–µ–∫—É—â–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å
     * @param currentPositions —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π
     * @return true –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç
     */
    public boolean isCompatibleWith(BigDecimal currentVolatility, int currentPositions) {
        if (this == CRITICAL) {
            return false;
        }

        return currentVolatility.compareTo(maxVolatilityPercent) <= 0 &&
                currentPositions <= maxSimultaneousPositions;
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–æ–≤
     *
     * @return —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏
     */
    public String toLogString() {
        return String.format("%s %s", emoji, description.toUpperCase());
    }

    @Override
    public String toString() {
        return description;
    }
}