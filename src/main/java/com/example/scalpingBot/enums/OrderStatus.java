package com.example.scalpingBot.enums;

import lombok.Getter;
import java.util.EnumSet;
import java.util.Set;

/**
 * –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤ –¥–ª—è —Å–∫–∞–ª—å–ø–∏–Ω–≥-–±–æ—Ç–∞
 *
 * –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –æ—Ä–¥–µ—Ä–∞:
 * PENDING ‚Üí SUBMITTED ‚Üí PARTIALLY_FILLED ‚Üí FILLED
 *              ‚Üì           ‚Üì                ‚Üì
 *          REJECTED    CANCELLED        CANCELLED
 *              ‚Üì           ‚Üì                ‚Üì
 *            FAILED      FAILED          FAILED
 *
 * @author ScalpingBot Team
 * @version 1.0
 */
@Getter
public enum OrderStatus {

    /**
     * –û—Ä–¥–µ—Ä —Å–æ–∑–¥–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ, –Ω–æ –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –±–∏—Ä–∂—É
     *
     * –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
     * - –ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –æ—Ä–¥–µ—Ä–æ–≤
     * - –û—Ä–¥–µ—Ä –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é
     * - –í–æ–∑–º–æ–∂–Ω–∞ –æ—Ç–º–µ–Ω–∞ –±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –±–∏—Ä–∂–µ
     * - –ù–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å
     */
    PENDING(
            "PENDING",
            "–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏",
            false,  // –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω –Ω–∞ –±–∏—Ä–∂–µ
            true,   // –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω
            false,  // –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω
            false,  // –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å
            "‚è≥",   // –ø–µ—Å–æ—á–Ω—ã–µ —á–∞—Å—ã
            0       // –Ω–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
    ),

    /**
     * –û—Ä–¥–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –±–∏—Ä–∂—É –∏ –ø—Ä–∏–Ω—è—Ç –∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—é
     *
     * –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
     * - –û—Ä–¥–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–∫–∞–Ω–µ –∑–∞—è–≤–æ–∫
     * - –û–∂–∏–¥–∞–µ—Ç –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ —Ü–µ–Ω–µ
     * - –ú–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω —á–µ—Ä–µ–∑ API –±–∏—Ä–∂–∏
     * - –†–µ–∑–µ—Ä–≤–∏—Ä—É–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
     */
    SUBMITTED(
            "SUBMITTED",
            "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –±–∏—Ä–∂—É",
            true,   // –∞–∫—Ç–∏–≤–µ–Ω –Ω–∞ –±–∏—Ä–∂–µ
            true,   // –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω
            false,  // –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω
            true,   // —Ä–µ–∑–µ—Ä–≤–∏—Ä—É–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞
            "üì§",   // —Å—Ç—Ä–µ–ª–∫–∞ –∏—Å—Ö–æ–¥—è—â–∞—è
            1       // –Ω–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
    ),

    /**
     * –û—Ä–¥–µ—Ä —á–∞—Å—Ç–∏—á–Ω–æ –∏—Å–ø–æ–ª–Ω–µ–Ω
     *
     * –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
     * - –ß–∞—Å—Ç—å –æ–±—ä–µ–º–∞ —É–∂–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∞
     * - –û—Å—Ç–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —Å—Ç–∞–∫–∞–Ω–µ
     * - –í–∞–∂–Ω–æ –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤ –≤ —Å–∫–∞–ª—å–ø–∏–Ω–≥–µ
     * - –ß–∞—Å—Ç–∏—á–Ω–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å
     */
    PARTIALLY_FILLED(
            "PARTIALLY_FILLED",
            "–ß–∞—Å—Ç–∏—á–Ω–æ –∏—Å–ø–æ–ª–Ω–µ–Ω",
            true,   // –æ—Å—Ç–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞
            true,   // –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –æ—Å—Ç–∞—Ç–æ–∫
            false,  // –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é
            true,   // —á–∞—Å—Ç–∏—á–Ω–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å
            "üîÑ",   // —Å—Ç—Ä–µ–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            2       // —Å—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    ),

    /**
     * –û—Ä–¥–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª–Ω–µ–Ω
     *
     * –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
     * - –í–µ—Å—å –æ–±—ä–µ–º –∏—Å–ø–æ–ª–Ω–µ–Ω
     * - –§–∏–Ω–∞–ª—å–Ω—ã–π —É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å
     * - –ü–æ–ª–Ω–æ—Å—Ç—å—é –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å
     * - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–æ—Ä–≥–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
     */
    FILLED(
            "FILLED",
            "–ò—Å–ø–æ–ª–Ω–µ–Ω",
            false,  // –±–æ–ª—å—à–µ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
            false,  // –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å
            true,   // –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ
            true,   // –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å
            "‚úÖ",   // –≥–∞–ª–æ—á–∫–∞
            3       // –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
    ),

    /**
     * –û—Ä–¥–µ—Ä –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏–ª–∏ —Å–∏—Å—Ç–µ–º–æ–π
     *
     * –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
     * - –û—Ä–¥–µ—Ä —Å–Ω—è—Ç —Å –±–∏—Ä–∂–∏
     * - –°—Ä–µ–¥—Å—Ç–≤–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
     * - –ú–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω –∫–∞–∫ –≤—Ä—É—á–Ω—É—é, —Ç–∞–∫ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
     * - –ü—Ä–∏ —á–∞—Å—Ç–∏—á–Ω–æ–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ - –æ—Ç–º–µ–Ω–µ–Ω–∞ –æ—Å—Ç–∞–≤—à–∞—è—Å—è —á–∞—Å—Ç—å
     */
    CANCELLED(
            "CANCELLED",
            "–û—Ç–º–µ–Ω–µ–Ω",
            false,  // –±–æ–ª—å—à–µ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
            false,  // —É–∂–µ –æ—Ç–º–µ–Ω–µ–Ω
            true,   // –∑–∞–≤–µ—Ä—à–µ–Ω
            false,  // –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å (–∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–∏ partial fill)
            "‚ùå",   // –∫—Ä–µ—Å—Ç–∏–∫
            2       // —Å—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    ),

    /**
     * –û—Ä–¥–µ—Ä –æ—Ç–∫–ª–æ–Ω–µ–Ω –±–∏—Ä–∂–µ–π
     *
     * –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
     * - –ë–∏—Ä–∂–∞ –Ω–µ –ø—Ä–∏–Ω—è–ª–∞ –æ—Ä–¥–µ—Ä
     * - –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —Å—Ä–µ–¥—Å—Ç–≤, –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
     * - –¢—Ä–µ–±—É–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
     * - –ö—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Å–∫–∞–ª—å–ø–∏–Ω–≥ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
     */
    REJECTED(
            "REJECTED",
            "–û—Ç–∫–ª–æ–Ω–µ–Ω –±–∏—Ä–∂–µ–π",
            false,  // –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω
            false,  // –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å
            true,   // –∑–∞–≤–µ—Ä—à–µ–Ω –Ω–µ—É—Å–ø–µ—à–Ω–æ
            false,  // –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å
            "üö´",   // –∑–∞–ø—Ä–µ—Ç
            4       // –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    ),

    /**
     * –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ä–¥–µ—Ä–∞
     *
     * –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
     * - –°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞
     * - –¢—Ä–µ–±—É–µ—Ç –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
     * - –ú–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞
     * - –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
     */
    FAILED(
            "FAILED",
            "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏",
            false,  // –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
            false,  // –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å
            true,   // –∑–∞–≤–µ—Ä—à–µ–Ω –Ω–µ—É—Å–ø–µ—à–Ω–æ
            false,  // —Å—Ç–∞—Ç—É—Å –±–∞–ª–∞–Ω—Å–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω
            "üí•",   // –≤–∑—Ä—ã–≤
            5       // –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    ),

    /**
     * –û—Ä–¥–µ—Ä –∏—Å—Ç–µ–∫ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
     *
     * –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
     * - –ü—Ä–µ–≤—ã—à–µ–Ω —Ç–∞–π–º–∞—É—Ç –æ—Ä–¥–µ—Ä–∞
     * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω —Å–∏—Å—Ç–µ–º–æ–π
     * - –í–∞–∂–Ω–æ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö —Å–∫–∞–ª—å–ø–∏–Ω–≥ –æ–ø–µ—Ä–∞—Ü–∏–π
     * - –¢—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∞ —Ç–∞–π–º–∏–Ω–≥–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
     */
    EXPIRED(
            "EXPIRED",
            "–ò—Å—Ç–µ–∫ –ø–æ –≤—Ä–µ–º–µ–Ω–∏",
            false,  // –±–æ–ª—å—à–µ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
            false,  // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω
            true,   // –∑–∞–≤–µ—Ä—à–µ–Ω
            false,  // –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å
            "‚è∞",   // —á–∞—Å—ã
            3       // –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    );

    /**
     * –ö–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è API –±–∏—Ä–∂–∏
     */
    private final String code;

    /**
     * –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
     */
    private final String description;

    /**
     * –ê–∫—Ç–∏–≤–µ–Ω –ª–∏ –æ—Ä–¥–µ—Ä –Ω–∞ –±–∏—Ä–∂–µ
     */
    private final boolean activeOnExchange;

    /**
     * –ú–æ–∂–µ—Ç –ª–∏ –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω
     */
    private final boolean cancellable;

    /**
     * –ó–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –æ—Ä–¥–µ—Ä (—Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å)
     */
    private final boolean terminal;

    /**
     * –í–ª–∏—è–µ—Ç –ª–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å
     */
    private final boolean affectsBalance;

    /**
     * –≠–º–æ–¥–∑–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ª–æ–≥–æ–≤ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    private final String emoji;

    /**
     * –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ (—á–µ–º –≤—ã—à–µ —á–∏—Å–ª–æ, —Ç–µ–º –≤—ã—à–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
     */
    private final int processingPriority;

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è
     */
    OrderStatus(String code, String description, boolean activeOnExchange,
                boolean cancellable, boolean terminal, boolean affectsBalance,
                String emoji, int processingPriority) {
        this.code = code;
        this.description = description;
        this.activeOnExchange = activeOnExchange;
        this.cancellable = cancellable;
        this.terminal = terminal;
        this.affectsBalance = affectsBalance;
        this.emoji = emoji;
        this.processingPriority = processingPriority;
    }

    /**
     * –ù–∞–π—Ç–∏ —Å—Ç–∞—Ç—É—Å –ø–æ –∫–æ–¥—É
     *
     * @param code –∫–æ–¥ —Å—Ç–∞—Ç—É—Å–∞
     * @return –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
     * @throws IllegalArgumentException –µ—Å–ª–∏ –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
     */
    public static OrderStatus fromCode(String code) {
        if (code == null || code.trim().isEmpty()) {
            throw new IllegalArgumentException("Order status code cannot be null or empty");
        }

        String normalizedCode = code.trim().toUpperCase();

        for (OrderStatus status : values()) {
            if (status.code.equals(normalizedCode)) {
                return status;
            }
        }

        throw new IllegalArgumentException("Unknown order status code: " + code);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
     *
     * @return –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
     */
    public static Set<OrderStatus> getActiveStatuses() {
        return EnumSet.of(SUBMITTED, PARTIALLY_FILLED);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
     *
     * @return –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
     */
    public static Set<OrderStatus> getTerminalStatuses() {
        return EnumSet.of(FILLED, CANCELLED, REJECTED, FAILED, EXPIRED);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —É—Å–ø–µ—à–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
     *
     * @return –º–Ω–æ–∂–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
     */
    public static Set<OrderStatus> getSuccessfulStatuses() {
        return EnumSet.of(FILLED, PARTIALLY_FILLED);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã –æ—à–∏–±–æ–∫
     *
     * @return –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç—É—Å–æ–≤ –æ—à–∏–±–æ–∫
     */
    public static Set<OrderStatus> getErrorStatuses() {
        return EnumSet.of(REJECTED, FAILED);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω—ã–º
     *
     * @return true –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω—ã–π
     */
    public boolean isSuccessful() {
        return this == FILLED || this == PARTIALLY_FILLED;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–æ–π
     *
     * @return true –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –æ—à–∏–±–∫—É
     */
    public boolean isError() {
        return this == REJECTED || this == FAILED;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ç—Ä–µ–±—É–µ—Ç –ª–∏ —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
     *
     * @return true –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
     */
    public boolean requiresMonitoring() {
        return activeOnExchange || this == PENDING;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ç—Ä–µ–±—É–µ—Ç –ª–∏ —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     *
     * @return true –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    public boolean requiresNotification() {
        return isError() || this == FILLED || this == EXPIRED;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
     *
     * @return –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å–ª–µ–¥—É—é—â–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
     */
    public Set<OrderStatus> getPossibleNextStatuses() {
        switch (this) {
            case PENDING:
                return EnumSet.of(SUBMITTED, CANCELLED, FAILED);
            case SUBMITTED:
                return EnumSet.of(PARTIALLY_FILLED, FILLED, CANCELLED, REJECTED, EXPIRED, FAILED);
            case PARTIALLY_FILLED:
                return EnumSet.of(FILLED, CANCELLED, FAILED);
            default:
                return EnumSet.noneOf(OrderStatus.class); // –§–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π
     *
     * @param newStatus –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
     * @return true –µ—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤–æ–∑–º–æ–∂–µ–Ω
     */
    public boolean canTransitionTo(OrderStatus newStatus) {
        return getPossibleNextStatuses().contains(newStatus);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç–æ–≤–æ–π –∫–æ–¥ –¥–ª—è UI
     *
     * @return hex –∫–æ–¥ —Ü–≤–µ—Ç–∞
     */
    public String getColorCode() {
        switch (this) {
            case FILLED:
                return "#00FF00"; // –∑–µ–ª–µ–Ω—ã–π
            case PARTIALLY_FILLED:
                return "#FFA500"; // –æ—Ä–∞–Ω–∂–µ–≤—ã–π
            case CANCELLED:
                return "#808080"; // —Å–µ—Ä—ã–π
            case REJECTED:
            case FAILED:
                return "#FF0000"; // –∫—Ä–∞—Å–Ω—ã–π
            case EXPIRED:
                return "#FF6600"; // —Ç–µ–º–Ω–æ-–æ—Ä–∞–Ω–∂–µ–≤—ã–π
            case SUBMITTED:
                return "#0080FF"; // —Å–∏–Ω–∏–π
            case PENDING:
            default:
                return "#FFFF00"; // –∂–µ–ª—Ç—ã–π
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
     *
     * @return —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
     */
    public String getRecommendedAction() {
        switch (this) {
            case PENDING:
                return "–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ –±–∏—Ä–∂—É";
            case SUBMITTED:
                return "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è";
            case PARTIALLY_FILLED:
                return "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–≤—à–µ–π—Å—è —á–∞—Å—Ç–∏";
            case FILLED:
                return "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –∏ –±–∞–ª–∞–Ω—Å–∞";
            case CANCELLED:
                return "–ê–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–º–µ–Ω—ã";
            case REJECTED:
                return "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ—Ä–¥–µ—Ä–∞";
            case FAILED:
                return "–ê–Ω–∞–ª–∏–∑ —Å–∏—Å—Ç–µ–º–Ω–æ–π –æ—à–∏–±–∫–∏";
            case EXPIRED:
                return "–ü–µ—Ä–µ—Å–º–æ—Ç—Ä —Ç–∞–π–º–∏–Ω–≥–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏";
            default:
                return "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥";
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–æ–≤
     *
     * @return —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏
     */
    public String toLogString() {
        return String.format("%s %s", emoji, description.toUpperCase());
    }

    @Override
    public String toString() {
        return description;
    }
}