package com.example.scalpingBot.enums;

import lombok.Getter;

/**
 * –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤ –¥–ª—è —Å–∫–∞–ª—å–ø–∏–Ω–≥-–±–æ—Ç–∞
 *
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏:
 * - BUY - –ø–æ–∫—É–ø–∫–∞ (–æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–ª–∏–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏)
 * - SELL - –ø—Ä–æ–¥–∞–∂–∞ (–æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–π –ø–æ–∑–∏—Ü–∏–∏ –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –¥–ª–∏–Ω–Ω–æ–π)
 *
 * @author ScalpingBot Team
 * @version 1.0
 */
@Getter
public enum OrderSide {

    /**
     * –ü–æ–∫—É–ø–∫–∞ - –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–ª–∏–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
     *
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞:
     * - –û–∂–∏–¥–∞–µ—Ç—Å—è —Ä–æ—Å—Ç —Ü–µ–Ω—ã –∞–∫—Ç–∏–≤–∞
     * - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –≤–æ—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥
     * - RSI –≤ –∑–æ–Ω–µ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏ (<30)
     * - –¶–µ–Ω–∞ –ø—Ä–æ–±–∏–≤–∞–µ—Ç –≤–µ—Ä—Ö–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É Bollinger Bands
     * - MACD –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±—ã—á–∏–π —Å–∏–≥–Ω–∞–ª
     * - –û–±—ä–µ–º—ã —Ä–∞—Å—Ç—É—Ç –ø—Ä–∏ —Ä–æ—Å—Ç–µ —Ü–µ–Ω—ã
     */
    BUY(
            "BUY",
            "–ü–æ–∫—É–ø–∫–∞",
            "–î–ª–∏–Ω–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è",
            true,   // —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å –±–∞–∑–æ–≤–æ–≥–æ –∞–∫—Ç–∏–≤–∞
            false,  // —É–º–µ–Ω—å—à–∞–µ—Ç –±–∞–ª–∞–Ω—Å –∫–æ—Ç–∏—Ä—É–µ–º–æ–≥–æ –∞–∫—Ç–∏–≤–∞
            "üü¢"    // –∑–µ–ª–µ–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    ),

    /**
     * –ü—Ä–æ–¥–∞–∂–∞ - –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–π –ø–æ–∑–∏—Ü–∏–∏ –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –¥–ª–∏–Ω–Ω–æ–π
     *
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞:
     * - –û–∂–∏–¥–∞–µ—Ç—Å—è –ø–∞–¥–µ–Ω–∏–µ —Ü–µ–Ω—ã –∞–∫—Ç–∏–≤–∞
     * - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∏—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥
     * - RSI –≤ –∑–æ–Ω–µ –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏ (>70)
     * - –¶–µ–Ω–∞ –ø—Ä–æ–±–∏–≤–∞–µ—Ç –Ω–∏–∂–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É Bollinger Bands
     * - MACD –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–¥–≤–µ–∂–∏–π —Å–∏–≥–Ω–∞–ª
     * - –û–±—ä–µ–º—ã —Ä–∞—Å—Ç—É—Ç –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ü–µ–Ω—ã
     * - –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–±—ã–ª—å–Ω—É—é –¥–ª–∏–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
     */
    SELL(
            "SELL",
            "–ü—Ä–æ–¥–∞–∂–∞",
            "–ö–æ—Ä–æ—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –¥–ª–∏–Ω–Ω–æ–π",
            false,  // —É–º–µ–Ω—å—à–∞–µ—Ç –±–∞–ª–∞–Ω—Å –±–∞–∑–æ–≤–æ–≥–æ –∞–∫—Ç–∏–≤–∞
            true,   // —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å –∫–æ—Ç–∏—Ä—É–µ–º–æ–≥–æ –∞–∫—Ç–∏–≤–∞
            "üî¥"    // –∫—Ä–∞—Å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    );

    /**
     * –ö–æ–¥ —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ä–¥–µ—Ä–∞ –¥–ª—è API –±–∏—Ä–∂–∏
     */
    private final String code;

    /**
     * –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
     */
    private final String displayName;

    /**
     * –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
     */
    private final String description;

    /**
     * –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ª–∏ –±–∞–ª–∞–Ω—Å –±–∞–∑–æ–≤–æ–≥–æ –∞–∫—Ç–∏–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, BTC –≤ –ø–∞—Ä–µ BTCUSDT)
     */
    private final boolean increasesBaseAsset;

    /**
     * –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ª–∏ –±–∞–ª–∞–Ω—Å –∫–æ—Ç–∏—Ä—É–µ–º–æ–≥–æ –∞–∫—Ç–∏–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, USDT –≤ –ø–∞—Ä–µ BTCUSDT)
     */
    private final boolean increasesQuoteAsset;

    /**
     * –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ª–æ–≥–æ–≤ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    private final String indicator;

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è
     */
    OrderSide(String code, String displayName, String description,
              boolean increasesBaseAsset, boolean increasesQuoteAsset, String indicator) {
        this.code = code;
        this.displayName = displayName;
        this.description = description;
        this.increasesBaseAsset = increasesBaseAsset;
        this.increasesQuoteAsset = increasesQuoteAsset;
        this.indicator = indicator;
    }

    /**
     * –ù–∞–π—Ç–∏ —Å—Ç–æ—Ä–æ–Ω—É –æ—Ä–¥–µ—Ä–∞ –ø–æ –∫–æ–¥—É
     *
     * @param code –∫–æ–¥ —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ä–¥–µ—Ä–∞
     * @return –Ω–∞–π–¥–µ–Ω–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –æ—Ä–¥–µ—Ä–∞
     * @throws IllegalArgumentException –µ—Å–ª–∏ –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
     */
    public static OrderSide fromCode(String code) {
        if (code == null || code.trim().isEmpty()) {
            throw new IllegalArgumentException("Order side code cannot be null or empty");
        }

        String normalizedCode = code.trim().toUpperCase();

        for (OrderSide side : values()) {
            if (side.code.equals(normalizedCode)) {
                return side;
            }
        }

        throw new IllegalArgumentException("Unknown order side code: " + code);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É
     *
     * @return –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –æ—Ä–¥–µ—Ä–∞
     */
    public OrderSide getOpposite() {
        return this == BUY ? SELL : BUY;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–æ—Ä–æ–Ω–∞ –ø–æ–∫—É–ø–∫–æ–π
     *
     * @return true –µ—Å–ª–∏ —ç—Ç–æ –ø–æ–∫—É–ø–∫–∞
     */
    public boolean isBuy() {
        return this == BUY;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–æ—Ä–æ–Ω–∞ –ø—Ä–æ–¥–∞–∂–µ–π
     *
     * @return true –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–¥–∞–∂–∞
     */
    public boolean isSell() {
        return this == SELL;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å—Ç–æ–ø-–ª–æ—Å—Å–∞
     * –î–ª—è –¥–ª–∏–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ (BUY) —Å—Ç–æ–ø-–ª–æ—Å—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å SELL
     * –î–ª—è –∫–æ—Ä–æ—Ç–∫–æ–π –ø–æ–∑–∏—Ü–∏–∏ (SELL) —Å—Ç–æ–ø-–ª–æ—Å—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å BUY
     *
     * @return —Å—Ç–æ—Ä–æ–Ω–∞ –¥–ª—è —Å—Ç–æ–ø-–ª–æ—Å—Å–∞
     */
    public OrderSide getStopLossSide() {
        return getOpposite();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞
     * –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å—Ç–æ–ø-–ª–æ—Å—Å—É - –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞
     *
     * @return —Å—Ç–æ—Ä–æ–Ω–∞ –¥–ª—è —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞
     */
    public OrderSide getTakeProfitSide() {
        return getOpposite();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –º–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ P&L
     * BUY: +1 (–ø—Ä–∏–±—ã–ª—å –ø—Ä–∏ —Ä–æ—Å—Ç–µ —Ü–µ–Ω—ã)
     * SELL: -1 (–ø—Ä–∏–±—ã–ª—å –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ü–µ–Ω—ã)
     *
     * @return –º–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–∏–±—ã–ª–∏/—É–±—ã—Ç–∫–∞
     */
    public int getPnlMultiplier() {
        return this == BUY ? 1 : -1;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é –ø–æ–∑–∏—Ü–∏—é –≤ —Å—Ç–∞–∫–∞–Ω–µ –∑–∞—è–≤–æ–∫
     * BUY: –ø–æ–∫—É–ø–∞–µ–º –ø–æ ask (–≤–µ—Ä—Ö–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç–∞–∫–∞–Ω–∞)
     * SELL: –ø—Ä–æ–¥–∞–µ–º –ø–æ bid (–Ω–∏–∂–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç–∞–∫–∞–Ω–∞)
     *
     * @return —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –ø–æ–∑–∏—Ü–∏—è –≤ —Å—Ç–∞–∫–∞–Ω–µ
     */
    public String getRecommendedBookSide() {
        return this == BUY ? "ASK" : "BID";
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç–æ–≤–æ–π –∫–æ–¥ –¥–ª—è UI –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     *
     * @return hex –∫–æ–¥ —Ü–≤–µ—Ç–∞
     */
    public String getColorCode() {
        return this == BUY ? "#00FF00" : "#FF0000"; // –∑–µ–ª–µ–Ω—ã–π / –∫—Ä–∞—Å–Ω—ã–π
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ç–∏–ø–æ–º –æ—Ä–¥–µ—Ä–∞ –¥–ª—è —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞
     *
     * @param orderType —Ç–∏–ø –æ—Ä–¥–µ—Ä–∞
     * @return true –µ—Å–ª–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞
     */
    public boolean isCompatibleForScalping(OrderType orderType) {
        switch (orderType) {
            case MARKET:
            case LIMIT:
                return true; // –õ—é–±–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç

            case STOP_LOSS:
                return true; // –°—Ç–æ–ø-–ª–æ—Å—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ª—é–±—É—é —Å—Ç–æ—Ä–æ–Ω—É

            case TAKE_PROFIT:
                return true; // –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ª—é–±—É—é —Å—Ç–æ—Ä–æ–Ω—É

            case OCO:
                return true; // OCO —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è

            default:
                return false;
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –∫–∞–∫ –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
     *
     * @param maxPositionSizePercent –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     * @return —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏
     */
    public double getRecommendedPositionSize(double maxPositionSizePercent) {
        // –î–ª—è —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä
        // —Ç–∞–∫ –∫–∞–∫ –¥–µ—Ä–∂–∏–º –ø–æ–∑–∏—Ü–∏–∏ –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è (–¥–æ 1 —á–∞—Å–∞)
        return Math.min(maxPositionSizePercent, 5.0); // –º–∞–∫—Å–∏–º—É–º 5% –∫–∞–∫ –≤ —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–µ
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Å —É—á–µ—Ç–æ–º –∞–∫—Ç–∏–≤–∞
     *
     * @param tradingPair —Ç–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, BTCUSDT)
     * @return –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
     */
    public String getActionDescription(String tradingPair) {
        if (tradingPair == null || tradingPair.isEmpty()) {
            return displayName;
        }

        // –ò–∑–≤–ª–µ–∫–∞–µ–º –±–∞–∑–æ–≤—ã–π –∞–∫—Ç–∏–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, BTC –∏–∑ BTCUSDT)
        String baseAsset = tradingPair.replaceAll("USDT$|BUSD$|USDC$", "");

        return this == BUY
                ? String.format("–ü–æ–∫—É–ø–∫–∞ %s", baseAsset)
                : String.format("–ü—Ä–æ–¥–∞–∂–∞ %s", baseAsset);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —ç–º–æ–¥–∑–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ª–æ–≥–æ–≤
     *
     * @return —ç–º–æ–¥–∑–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
     */
    public String getEmoji() {
        return indicator;
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–æ–≤
     *
     * @return —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º
     */
    public String toLogString() {
        return String.format("%s %s", indicator, displayName.toUpperCase());
    }

    @Override
    public String toString() {
        return displayName;
    }
}