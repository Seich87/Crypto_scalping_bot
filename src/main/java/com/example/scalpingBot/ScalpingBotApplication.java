package com.example.scalpingBot;

import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.scheduling.annotation.EnableAsync;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import jakarta.annotation.PostConstruct;
import jakarta.annotation.PreDestroy;
import java.util.TimeZone;

/**
 * –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–≥–æ —Å–∫–∞–ª—å–ø–∏–Ω–≥-–±–æ—Ç–∞

 * –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è —Å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞ (0.8%/0.4%)
 * - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç (2% –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç, 5% –Ω–∞ –ø–æ–∑–∏—Ü–∏—é)
 * - –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
 * - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –±–∏—Ä–∂ (Binance, Bybit)
 * - –ú–æ—Å–∫–æ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
 *
 * @author ScalpingBot Team
 * @version 1.0
 * @since 2025-06-05
 */
@Slf4j
@SpringBootApplication
@EnableScheduling          // –í–∫–ª—é—á–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á
@EnableAsync              // –í–∫–ª—é—á–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
@EnableTransactionManagement // –í–∫–ª—é—á–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏
public class ScalpingBotApplication {

	/**
	 * –ú–æ—Å–∫–æ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
	 */
	private static final String MOSCOW_TIMEZONE = "Europe/Moscow";

	/**
	 * –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	 */
	private static final String APP_VERSION = "1.0.0";

	/**
	 * –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ª–æ–≥–æ–≤
	 */
	private static final String APP_NAME = "Crypto Scalping Bot";

	/**
	 * –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	 *
	 * @param args –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
	 */
	public static void main(String[] args) {
		try {
			// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
			TimeZone.setDefault(TimeZone.getTimeZone(MOSCOW_TIMEZONE));

			// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
			System.setProperty("spring.output.ansi.enabled", "detect");
			System.setProperty("spring.jpa.open-in-view", "false");

			// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞
			log.info("========================================");
			log.info("Starting {} v{}", APP_NAME, APP_VERSION);
			log.info("Timezone: {}", MOSCOW_TIMEZONE);
			log.info("Java Version: {}", System.getProperty("java.version"));
			log.info("========================================");

			// –ó–∞–ø—É—Å–∫ Spring Boot –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
			SpringApplication app = new SpringApplication(ScalpingBotApplication.class);

			// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ Spring Boot
			app.setAdditionalProfiles(); // –ü—Ä–æ—Ñ–∏–ª–∏ –±—É–¥—É—Ç –≤–∑—è—Ç—ã –∏–∑ application.properties

			// –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
			app.run(args);

		} catch (Exception e) {
			log.error("Failed to start {}: {}", APP_NAME, e.getMessage(), e);
			System.exit(1);
		}
	}

	/**
	 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–∏–Ω–æ–≤ Spring
	 * –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
	 */
	@PostConstruct
	public void initialize() {
		log.info("========================================");
		log.info("{} successfully initialized!", APP_NAME);
		log.info("Current timezone: {}", TimeZone.getDefault().getID());
		log.info("Application ready for scalping operations");
		log.info("========================================");

		// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
		validateCriticalSettings();

		// –í—ã–≤–æ–¥ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
		printSecurityWarnings();
	}

	/**
	 * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	 */
	@PreDestroy
	public void cleanup() {
		log.info("========================================");
		log.info("Shutting down {} v{}", APP_NAME, APP_VERSION);
		log.info("Performing cleanup operations...");
		log.info("All scalping operations stopped");
		log.info("Application shutdown completed");
		log.info("========================================");
	}

	/**
	 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
	 */
	private void validateCriticalSettings() {
		// –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
		String currentTz = TimeZone.getDefault().getID();
		if (!MOSCOW_TIMEZONE.equals(currentTz)) {
			log.warn("WARNING: Expected timezone '{}', but current is '{}'",
					MOSCOW_TIMEZONE, currentTz);
		}

		// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Java
		String javaVersion = System.getProperty("java.version");
		if (!javaVersion.startsWith("17")) {
			log.warn("WARNING: Recommended Java 17, current version: {}", javaVersion);
		}

		// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–π –ø–∞–º—è—Ç–∏
		long maxMemory = Runtime.getRuntime().maxMemory();
		long maxMemoryMB = maxMemory / (1024 * 1024);
		if (maxMemoryMB < 512) {
			log.warn("WARNING: Low memory detected: {}MB. Recommended: 1GB+", maxMemoryMB);
		}

		log.info("Critical settings validation completed");
	}

	/**
	 * –í—ã–≤–æ–¥ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Ä–∏—Å–∫–∞—Ö
	 */
	private void printSecurityWarnings() {
		log.info("========================================");
		log.info("SECURITY AND RISK WARNINGS:");
		log.info("========================================");

		// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
		String activeProfile = System.getProperty("spring.profiles.active", "default");

		if ("prod".equals(activeProfile)) {
			log.warn("üö® PRODUCTION MODE DETECTED üö®");
			log.warn("‚ö†Ô∏è  REAL MONEY AT RISK!");
			log.warn("‚ö†Ô∏è  Ensure all risk management settings are correct");
			log.warn("‚ö†Ô∏è  Monitor positions closely");
		} else {
			log.info("‚úÖ DEVELOPMENT/TEST MODE");
			log.info("‚úÖ Paper trading enabled - no real money at risk");
			log.info("‚úÖ Safe environment for learning and testing");
		}

		log.info("========================================");
		log.info("KEY RISK MANAGEMENT FEATURES:");
		log.info("‚Ä¢ Maximum 2% daily loss limit");
		log.info("‚Ä¢ Maximum 5% capital per position");
		log.info("‚Ä¢ Maximum 10 simultaneous positions");
		log.info("‚Ä¢ Automatic stop-loss on all positions");
		log.info("‚Ä¢ Emergency stop at 1.8% daily loss");
		log.info("‚Ä¢ Position correlation monitoring");
		log.info("========================================");

		log.info("SCALPING STRATEGY PARAMETERS:");
		log.info("‚Ä¢ Target profit: 0.8% per trade");
		log.info("‚Ä¢ Stop loss: 0.4% per trade");
		log.info("‚Ä¢ Risk/Reward ratio: 1:2");
		log.info("‚Ä¢ Analysis interval: 15 seconds");
		log.info("‚Ä¢ Maximum position time: 1 hour");
		log.info("========================================");
	}
}